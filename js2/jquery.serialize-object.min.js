!function(e,r){if("function"==typeof define&&define.amd)define(["exports","jquery"],function(e,i){return r(e,i)});else if("undefined"!=typeof exports){var i=require("jquery");r(exports,i)}else r(e,e.jQuery||e.Zepto||e.ender||e.$)}(this,function(e,r){function i(e,n){function a(e,r,i){return e[r]=i,e}function s(e,r){for(var i,n=e.match(t.key);void 0!==(i=n.pop());)if(t.push.test(i)){var s=u(e.replace(/\[\]$/,""));r=a([],s,r)}else t.fixed.test(i)?r=a([],i,r):t.named.test(i)&&(r=a({},i,r));return r}function u(e){return void 0===z[e]&&(z[e]=0),z[e]++}function f(e){switch(r('[name="'+e.name+'"]',n).attr("type")){case"checkbox":return"on"===e.value?!0:e.value;default:return e.value}}function o(r){if(!t.validate.test(r.name))return this;var n=f(r);n=i.postEncode(r);var a=s(r.name,n);return h=e.extend(!0,h,a),this}function d(r){if(!e.isArray(r))throw new Error("formSerializer.addPairs expects an Array");for(var i=0,t=r.length;t>i;i++)this.addPair(r[i]);return this}function c(){return h}function l(){return JSON.stringify(c())}var h={},z={};this.addPair=o,this.addPairs=d,this.serialize=c,this.serializeJSON=l}var t={validate:/^[a-z_][a-z0-9_]*(?:\[(?:\d*|[a-z0-9_]+)\])*$/i,key:/[a-z0-9_]+|(?=\[\])/gi,push:/^$/,fixed:/^\d+$/,named:/^[a-z0-9_]+$/i};return i.patterns=t,i.serializeObject=function(){return new i(r,this).addPairs(this.serializeArray()).serialize()},i.serializeJSON=function(){return new i(r,this).addPairs(this.serializeArray()).serializeJSON()},i.postEncode=function(e){return e.value},"undefined"!=typeof r.fn&&(r.fn.serializeObject=i.serializeObject,r.fn.serializeJSON=i.serializeJSON),e.FormSerializer=i,i});